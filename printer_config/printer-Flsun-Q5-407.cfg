[display_status]

[include timelapse.cfg]

[mcu]
serial: /dev/serial/by-path/platform-5200000.ehci1-controller-usb-0:1.4:1.0-port0
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: delta
max_velocity: 200
max_accel: 3000
max_accel_to_decel: 2000
max_z_velocity: 200
minimum_z_position: -10
delta_radius: 104.5
print_radius: 102

[stepper_a]
position_endstop: 210
arm_length: 215
angle: 210
rotation_distance: 40
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
endstop_pin: PA15
homing_speed: 90
homing_retract_dist: 5
homing_retract_speed: 10
second_homing_speed: 2

[stepper_b]
angle: 330
rotation_distance: 40
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
endstop_pin: PA12

[stepper_c]
angle: 90
rotation_distance: 40
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
endstop_pin: PC4

[delta_calibrate]
radius: 90
speed: 10
horizontal_move_z: 28

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 8.71
nozzle_diameter: 0.4
filament_diameter: 1.75
max_extrude_cross_section: 70
max_extrude_only_distance: 700
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp: 19.185
pid_Ki: 0.907
pid_Kd: 101.438
min_temp: 0
max_temp: 265

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
min_temp: 0
max_temp: 115
pid_Kp: 59.043
pid_Ki: 0.972
pid_Kd: 896.711

[bed_mesh]
speed: 90
horizontal_move_z: 25
mesh_radius: 90
mesh_origin: 0,0
round_probe_count: 7
algorithm: bicubic

[gcode_macro PAUSE]
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-90) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
rename_existing: PAUSE_BASE
description: Pause the actual running print

[gcode_macro RESUME]
gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} 
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}
    {% endif %} 
rename_existing: RESUME_BASE
description: Resume the actual running print

[gcode_macro CANCEL_PRINT]
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28
rename_existing: CANCEL_PRINT_BASE
description: Cancel the actual running print

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-600 F800
    G90

[gcode_macro LOAD_FILAMENT]
gcode:
    G91
    G1 E550 F800
    G1 E50 F300
    G90

[gcode_macro ZUP]
gcode: SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode: SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro SET_GCODE_OFFSET]
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"
rename_existing: _SET_GCODE_OFFSET

[gcode_macro bed_level_1]
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  CX_SAVE_CONFIG

[gcode_macro bed_level_2]
gcode:
  G28
  G1 X0 Y0 Z50 F4200
  bed_mesh_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  CX_SAVE_CONFIG

[gcode_macro G29]
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200

[delayed_gcode LOAD_GCODE_OFFSETS]
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
initial_duration: 2

[save_variables]
filename: ~/savedVariables1.cfg

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[gcode_arcs]

[exclude_object]

[adxl345]
cs_pin: rpi:None
spi_speed: 2000000
spi_bus: spidev2.0

[resonance_tester]
probe_points: 0,0,100
accel_chip: adxl345
accel_per_hz: 70

[probe]
pin: !PA11
z_offset: 16.2
speed: 10
samples: 3
sample_retract_dist: 3
samples_tolerance: 0.02
samples_tolerance_retries: 5

[fan]
pin: PB1

[filament_switch_sensor filament_sensor]
runout_gcode: PAUSE
switch_pin: PA4
